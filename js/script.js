// –ó–≤—É–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å Mellstroy - –° –ö–ù–û–ü–ö–û–ô –°–ö–ê–ß–ò–í–ê–ù–ò–Ø
document.addEventListener('DOMContentLoaded', function() {
    console.log('–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω!');
    
    const soundBoard = {
        sounds: new Map(),
        currentlyPlaying: null,
        
        // –ú–ê–°–°–ò–í –° –ù–ê–ó–í–ê–ù–ò–Ø–ú–ò –ú–ï–ú–û–í - –†–ï–î–ê–ö–¢–ò–†–£–ô–¢–ï –ó–î–ï–°–¨!
        memeNames: [
            "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è —Ñ—Ä–∞–∑–∞ 1",
            "–°–º–µ—Ö –¥–æ —Å–ª—ë–∑", 
            "–†–µ–∞–∫—Ü–∏—è –Ω–∞ –¥–æ–Ω–∞—Ç",
            "–≠–ø–∏—á–Ω—ã–π –∫—Ä–∏–∫",
            "–®—É—Ç–∫–∞ –≤ —á–∞—Ç–µ",
            "–£–¥–∏–≤–ª–µ–Ω–∏–µ",
            "–ë–æ–µ–≤–æ–π –∫–ª–∏—á",
            "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ",
            "–ü—Ä–æ—â–∞–Ω–∏–µ", 
            "–ú–æ—Ç–∏–≤–∞—Ü–∏—è",
            "–¢—Ä–æ–ª–ª–∏–Ω–≥",
            "–¶–∏—Ç–∞—Ç–∞ –¥–Ω—è"
        ],
        
        init() {
            console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–≤—É–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏...');
            this.createSoundPanels();
            this.setupEventListeners();
            console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
        },
        
        // –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª–∏ –¥–ª—è –∑–≤—É–∫–æ–≤
        createSoundPanels() {
            const soundsContainer = document.getElementById('sounds-container');
            
            if (!soundsContainer) {
                console.error('–ù–µ –Ω–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∑–≤—É–∫–æ–≤!');
                return;
            }
            
            // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            soundsContainer.innerHTML = '';
            
            // –°–æ–∑–¥–∞–µ–º 12 –ø–∞–Ω–µ–ª–µ–π —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
            for (let i = 1; i <= 12; i++) {
                const soundId = `sound${i}`;
                const filename = `sounds${i}.mp3`;
                
                // –ë–µ—Ä–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –∏–∑ –º–∞—Å—Å–∏–≤–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å) –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ
                const memeName = this.memeNames[i-1] || `–ú–µ–º ${i}`;
                
                const panel = this.createSoundPanel(soundId, filename, memeName);
                soundsContainer.appendChild(panel);
                
                // –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∏—Ç—å –∑–≤—É–∫
                this.preloadSound(soundId, filename);
            }
            
            console.log('–°–æ–∑–¥–∞–Ω–æ 12 –∑–≤—É–∫–æ–≤—ã—Ö –ø–∞–Ω–µ–ª–µ–π —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏');
        },
        
        // –°–æ–∑–¥–∞–Ω–∏–µ –æ–¥–Ω–æ–π –ø–∞–Ω–µ–ª–∏
        createSoundPanel(soundId, filename, title) {
            const panel = document.createElement('div');
            panel.className = 'sound-panel';
            panel.setAttribute('data-sound', soundId);
            
            panel.innerHTML = `
                <div class="panel-content">
                    <h3>${title}</h3>
                    <div class="sound-info">
                        <div class="sound-filename">${filename}</div>
                        <div class="sound-status" id="status-${soundId}">‚ö´ –û–∂–∏–¥–∞–Ω–∏–µ...</div>
                    </div>
                    <div class="panel-buttons">
                        <button class="play-btn" data-sound="${soundId}">
                            <div class="play-icon">‚ñ∂</div>
                            –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏
                        </button>
                        <button class="download-btn" data-filename="${filename}">
                            ‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å
                        </button>
                    </div>
                </div>
            `;
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
            const playBtn = panel.querySelector('.play-btn');
            playBtn.addEventListener('click', (e) => {
                e.stopPropagation();
                console.log(`–ö–ª–∏–∫ –ø–æ –ø–∞–Ω–µ–ª–∏: ${soundId}`);
                this.playSound(soundId, panel, filename);
            });
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            const downloadBtn = panel.querySelector('.download-btn');
            downloadBtn.addEventListener('click', (e) => {
                e.stopPropagation();
                this.downloadSound(filename, title);
            });
            
            return panel;
        },
        
        // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∑–≤—É–∫–∞
        preloadSound(soundId, filename) {
            console.log(`–ü—ã—Ç–∞—é—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å: sounds/${filename}`);
            
            const audio = new Audio();
            audio.src = `./sounds/${filename}`;
            audio.preload = 'auto';
            
            audio.addEventListener('loadeddata', () => {
                console.log(`‚úÖ –ó–≤—É–∫ –∑–∞–≥—Ä—É–∂–µ–Ω: ${filename}`);
                this.updateStatus(soundId, '‚úÖ –ì–æ—Ç–æ–≤');
                this.sounds.set(soundId, audio);
            });
            
            audio.addEventListener('error', (e) => {
                console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${filename}`, e);
                this.updateStatus(soundId, '‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω');
            });
        },
        
        // –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–≤—É–∫–∞
        playSound(soundId, panel, filename) {
            console.log(`–ü–æ–ø—ã—Ç–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏: ${soundId}`);
            
            // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –∑–≤—É–∫
            this.stopCurrentSound();
            
            const audio = this.sounds.get(soundId);
            
            if (!audio) {
                console.error(`–ó–≤—É–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–º—è—Ç–∏: ${soundId}`);
                alert(`–ó–≤—É–∫ ${filename} –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É sounds/`);
                return;
            }
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å
            const volume = document.getElementById('volume').value;
            audio.volume = volume;
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞ –Ω–∞—á–∞–ª–æ
            audio.currentTime = 0;
            
            // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º
            const playPromise = audio.play();
            
            if (playPromise !== undefined) {
                playPromise.then(() => {
                    console.log(`üéµ –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ: ${filename}`);
                    this.currentlyPlaying = audio;
                    this.setPlayingState(panel, true);
                    this.updateStatus(soundId, 'üî¥ –ò–≥—Ä–∞–µ—Ç...');
                    
                    // –ö–æ–≥–¥–∞ –∑–≤—É–∫ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è
                    audio.addEventListener('ended', () => {
                        console.log(`‚èπÔ∏è –ó–≤—É–∫ –∑–∞–≤–µ—Ä—à–µ–Ω: ${filename}`);
                        this.setPlayingState(panel, false);
                        this.updateStatus(soundId, '‚úÖ –ì–æ—Ç–æ–≤');
                        this.currentlyPlaying = null;
                    }, { once: true });
                    
                }).catch(error => {
                    console.error('–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:', error);
                    alert(`–û—à–∏–±–∫–∞: ${error.message}`);
                    this.updateStatus(soundId, '‚ùå –û—à–∏–±–∫–∞');
                });
            }
        },
        
        // –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∑–≤—É–∫–∞
        downloadSound(filename, title) {
            const soundUrl = `./sounds/${filename}`;
            
            // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            const link = document.createElement('a');
            link.href = soundUrl;
            link.download = `${title}.mp3`;
            
            // –≠–º—É–ª–∏—Ä—É–µ–º –∫–ª–∏–∫ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
            
            console.log(`‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–Ω–∏–µ: ${filename}`);
        },
        
        // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –∑–≤—É–∫–∞
        stopCurrentSound() {
            if (this.currentlyPlaying) {
                console.log('–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Ç–µ–∫—É—â–∏–π –∑–≤—É–∫');
                this.currentlyPlaying.pause();
                this.currentlyPlaying.currentTime = 0;
                this.currentlyPlaying = null;
                
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –ø–∞–Ω–µ–ª–∏
                document.querySelectorAll('.sound-panel').forEach(panel => {
                    this.setPlayingState(panel, false);
                });
            }
        },
        
        // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
        setPlayingState(panel, isPlaying) {
            if (isPlaying) {
                panel.classList.add('playing');
            } else {
                panel.classList.remove('playing');
            }
        },
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
        updateStatus(soundId, message) {
            const statusElement = document.getElementById(`status-${soundId}`);
            if (statusElement) {
                statusElement.textContent = message;
            }
        },
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏
        setupEventListeners() {
            const volumeSlider = document.getElementById('volume');
            const volumeValue = document.getElementById('volume-value');
            
            if (volumeSlider && volumeValue) {
                volumeSlider.addEventListener('input', (e) => {
                    const value = Math.round(e.target.value * 100);
                    volumeValue.textContent = `${value}%`;
                    
                    if (this.currentlyPlaying) {
                        this.currentlyPlaying.volume = e.target.value;
                    }
                });
            }
            
            // –ö–Ω–æ–ø–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –∑–≤—É–∫–æ–≤
            const stopBtn = document.getElementById('stop-all');
            if (stopBtn) {
                stopBtn.addEventListener('click', () => {
                    this.stopCurrentSound();
                });
            }
        }
    };
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º
    soundBoard.init();
    
    // –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
    document.addEventListener('keydown', (e) => {
        if (e.code === 'Space') {
            e.preventDefault();
            const stopBtn = document.getElementById('stop-all');
            if (stopBtn) stopBtn.click();
        }
    });
});
